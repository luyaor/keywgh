## OR
dat<-read.csv("http://stat2.org/datasets/FruitFlies.csv")
attach(dat)
View(dat)
?aov
qqnorm(Longevity)
?TukeyHSD
set.seed(1)
X = rnorm(n = 500,mean = 5,sd = 2)
set.seed(1)
X = rnorm(n = 500,mean = 5,sd = 2)
Error = rnorm(n = 500, mean = 0,sd = 0.5)
plot(X,Y,xlab = "X: Explanatory Variable", ylab = "Y: Response Variable", pch = 16)
Y = 1 + 2*X + Error
plot(X,Y,xlab = "X: Explanatory Variable", ylab = "Y: Response Variable", pch = 16)
cor(X,Y)
LSL = lm(Y ~ X)
summary(LSL)
attach(trees)
m1 <- lm(Volume ~ Girth)
summary(m1)
plot(m1)
plot(Volumn~Girth)
plot(Volume~Girth)
abline(m1)
abline(m1, color='red')
abline(m1, c='red')
?abline
abline(m1, col='red')
cov(Volume, Girth)
corr(Volume, Girth)
cor(Volume, Girth)
attach(trees)
scatter(Girth, Volume)
plot(Girth, Volume)
m <- lm(Volumn~Girth, data=trees)
m <- lm(Volume~Girth, data=trees)
summary(m)
cor(X, Y)
cor(Volume, Girth)
sqrt(0.9353)
-36.9435+5.0659*12
23.8473-19.1
cor(Volume, Girth*2)
cor(Volume, Girth-1)
19.1-23.8473
abline(m, col='red')
plot(m)
attach(trees)
plot(Volume, Girth)
plot(Girth, Volume)
m <- lm(Volume~Girth)
summary(m)
sqrt(0.9353)
m$fitted.values
-36.9435+ 5.0659*12
19.1-23.8473
abline(m, col='red')
plot(m)
attach(trees)
plot(Girth, Volume)
m <- lm(Volume~Girth)
summary(m)
-36.9435+ 5.0659*12
19.1-23.8473
cor(Volume, Girth)
cor(Volume, Girth*3)
cor(Volume, Girth+2)
cor(Volume, -Girth)
cor(Volume, Girth*6)
abline(m)
abline(m, col='red')
plot(m)
x1 = (643+655+702)/3
x2 = (469+427+525)/3
x3 = (484+456+402)/3
y = (x1+x2+x3)/3
(x1-y)^2+(x2-y)^2+(x3-y)^2+
(x1-y)^2+(x2-y)^2+(x3-y)^2
x = data.frame('C'=c(643,655,702), 'M'=c(469,427,525), "F"=c(484,456,402))
anova(x)
x
sum((x-mean(x))^2)
sum(square(x-mean(x)))
(x-mean(x))^2
mean(x)
x
mean(x, 0)
mean(x, 1)
?mean
3*((x1-y)^2+(x2-y)^2+(x3-y)^2)
var(x$C)
x-c(1,2,3)
x-t(c(1,2,3))
sum(t(x)-c(1,2,3))
sum((t(x)-colMeans(x))^2)
4+18
library(bitops)
detach("package:bitops", unload = TRUE)
9+7
3^2
3**2
3%2
3/2
sqrt(16)
sqrt(1.69)
?sqrt
help(sqrt)
??square
x <- 1
y = 3
x+y
names<-c("Adam", "Ben", "Chuck", "Dan")
names[2]
exam1<-c(78, 51, 60, 90)
X
mean(exam1)
install.packages("swirl")
library(swirl)
swirl()
names<-c("Adam", "Ben", "Chuck", "Dan")
exam1<-c(78, 51, 60, 90)
mean(exam1)
9+7
library(backports)
detach("package:backports", unload = TRUE)
3^2
3**2
3%2
3/2
sqrt(16)
sqrt(1.69)
help(mean)
?sqrt
??square
x <- 1
y = 3
x+y
names<-c("Adam", "Ben", "Chuck", "Dan")
names[1]
exam1<-c(78, 51, 60, 90)
mean(exam1)
X
names<-c("Adam", "Ben", "Chuck", "Dan")
exam1<-c(78, 51, 60, 90)
mean(exam1)
install.packages("swirl")
library(swirl)
swirl()
expand.grid(rep(c(-1, 1), 3))
rep(c(-1, 1), 3)
rep(list(1:2), 2)
rep(list(c(-1, 1)), 3)
expand.grid(rep(list(c(-1, 1)), 3))
?expand.grid
sign = expand.grid(rep(list(c(-1, 1)), 3))
sign[1]
sign[, 1]
dim(sign)
View(sign)
sign[1,]
sign[1,]*1:3
sign[1,].*1:3
sign[1,]%*%1:3
sign[1,]%*%(1:3)
sign[1,]%*%c(1:3)
(sign[1,])%*%t(1:3)
t(1:3)
t(t(1:3))
(sign[1,])%*%t(t(1:3))
c(sign[1,])%*%t(t(1:3))
t(sign[1,])%*%t(t(1:3))
t(sign[1,])
sign[1,]%*%t(c(1,2,3))
y = c(sign[1, ])
y*%*t(c(1,2,3))
y%*%t(c(1,2,3))
dot(y, 1:3)
c(1, 2, 3) %*% t(c(1, 2, 3))
t(c(1, 2, 3))%*% c(1, 2, 3)
y%*%c(1,2,3)
m = mat(sign)
m = matrix(sign)
sign
sign*1:3
m =data.matrix(sign)
m*1:3
m%*%1:3
v = c(1,6,4,6,2,3,5)
sign = expand.grid(rep(list(c(-1, 1)), 7))
res = data.matrix(sign)%*%v
hist(res)
sort(res)
abline(b=19)
abline(a=19)
abline(19)
hline(19)
abline(v=19)
abline(v=19, col='r', ylab='p-value')
abline(v=19, col='red', ylab='p-value')
text(19, 0, "p-value")
text(19, 20, "p-value")
hist(res)
abline(v=19, col='red')
text(19, 20, "p-value")
text(19, -2, "p-value")
text(19, -2, "p-value")
text(19, -1, "p-value")
hist(res, main='Distribution of test statistic')
abline(v=19, col='red')
text(19, -1, "p-value")
text(20, 20, "p-value")
hist(res, main='Distribution of test statistic')
abline(v=19, col='red')
text(20, 20, "p-value")
hist(res, main='Distribution of test statistic')
abline(v=19, col='red', xlab='test statistic')
text(20, 20, "p-value")
hist(res, main='Distribution of test statistic', xlab='test statistic')
abline(v=19, col='red')
text(20, 20, "p-value")
getwd()
setwd("~/MyWebsite/keywgh.github.io/teach/courses/STAT3011")
knitr::opts_chunk$set(echo = TRUE)
Survey<-read.csv("SurveyFall2019.csv")
getwd()
read.csv("SurveyFall2019.csv")
Survey<-read.csv("SurveyFall2019.csv")
getwd()
## 5. Import from online website
Survey<-read.csv("https://keywgh.github.io/teach/courses/STAT3011/SurveyFall2019.csv")
View(Survey)
dim(Survey) #dimention of the dataset
head(Survey)
setwd("~/MyWebsite/keywgh.github.io/teach/courses/STAT3011")
table(Survey$year)
View(Survey)
## 2. Load from Files window
## 3. Load from Environment window
## 4. Use absolute path
Survey<-read.csv("~/MyWebsite/keywgh.github.io/teach/courses/STAT3011/SurveyFall2019.csv")
dim(Survey)  #dimention of the dataset
table(Survey$year)
table(Survey$gender)
barplot(table(Survey$year), main="Number of students in each year")
#option main=" " for title of plot
barplot(table(Survey$year)/length(Survey$year), main="Proportion of students in each year")
#length(Survey$year) gives the total number of observations in the data set
hist(table(Survey$year))
hist(Survey$year)
table(Survey$year)
hist(Survey$ideal.weight)
hist(Survey$ideal.weight)
hist(Survey$ideal.weight)
hist(Survey$ideal.weight, freq=FALSE, main="Relative frequency of Ideal Weight", xlab="in pounds")
hist(Survey$ideal.weight, freq=FALSE, main="Relative frequency of Ideal Weight", xlab="in pounds", breaks=20)
mean(Survey$ideal.weight[Survey$gender=="Female"])
median(Survey$ideal.weight[Survey$gender=="Female"])
hist(Survey$ideal.weight[Survey$gender=="Female"])
names(Survey)
getwd()
s
# Several ways to read a file
## 1. Change working directory
Survey<-read.csv("SurveyFall2019.csv")
getwd()
# Several ways to read a file
## 1. Change working directory
Survey<-read.csv("SurveyFall2019.csv")
v = c(2.16, 2.45, 2.91, 3.00, 2.71)
mean(v)
var(c(1,2,3))
f = 25*var(v)*120/153.4
f
qf(0.95, 4,120)
d = read.table("http://www.stat.umn.edu/~gary/book/fcdae.data/pr3.2",header=TRUE)
View(d)
aov(days ~ trt, data=d)
aov(days ~ as.factor(trt), data=d)
summary(aov(days ~ as.factor(trt), data=d))
boxplot(d$days~d$trt)
boxplot(d$days~d$trt, xlab='group', ylab='days')
m = lm(days ~ as.factor(trt), data=d)
summary(m)
names(m)
m$contrasts
m$contrasts
View(m)
m$coefficients
m$coefficients.values
as.array(m$coefficients)
coef = m$coefficients
names(coef)=NULL
cofef
coef
coef = c(m$coefficients)
names(coef)=NULL
coef
coef-mean(coef)
m = lm(days ~ as.factor(trt)-1, data=d)
summary(m)
aov(m)
summary(aov(m))
m = lm(days ~ as.factor(trt), data=d)
summary(m)
coef = c(m$coefficients)
names(coef)=NULL
m = lm(days ~ as.factor(trt), data=d)
summary(m)
coef = c(m$coefficients)
names(coef)=NULL
coef
coef[2:5] = coef[2:5] +63.36
coef
coef-mean(coef)
qt(0.975, 120)
sd = 14.81*qt(0.975, 120)*sqrt(1/25-1/125)
(5.92-sd, 5.92+sd)
sd = 14.81*qt(0.975, 120)*sqrt(1/25-1/125)
c(5.92-sd, 5.92+sd)
sd = 14.81*qt(0.975, 120)*sqrt(2/25)
c(-6.6-sd, -6.6+sd)
confint(m)
coef
w = c(0, 1, 1, -1, -1)/2
t = w%*%coef
t
s = 14.81
t = w%*%coef/s/sqrt(w%*%w/c)
t = w%*%coef/s/sqrt(sum(w*w)/c)
w
w*w
sum(w*w)/
c
t = w%*%coef/s/sqrt(sum(w*w)/25)
t
pt(t, 120)
1-pt(t, 120)
w%*%coef
plot(x, dt(x, 120), xlab="x value",
ylab="Density", main="Distribution of t Distributions, df=120")
x <- seq(-10, 10, length=100)
plot(x, dt(x, 120), xlab="x value",
ylab="Density", main="Distribution of t Distributions, df=120")
plot(x, dt(x, 120), xlab="x value",
ylab="Density", lty=2, main="Distribution of t Distributions, df=120")
plot(x, dt(x, 120), xlab="x value",
ylab="Density", lty=2, main="Distribution of t Distributions, df=120")
plot(x, dt(x, 120), xlab="x value",
ylab="Density", lwd=2, main="Distribution of t Distributions, df=120")
lines(x, dt(x, 120), xlab="x value",
ylab="Density", lwd=2, main="Distribution of t Distributions, df=120")
x <- seq(-10, 10, length=100)
lines(x, dt(x, 120), xlab="x value",
ylab="Density", lwd=2, main="Distribution of t Distributions, df=120")
lines(x, dt(x, 120), xlab="x value",
ylab="Density", lwd=2, main="Distribution of t Distributions, df=120")
x <- seq(-10, 10, length=100)
lines(x, dt(x, 120), xlab="x value",
ylab="Density", lwd=2, main="Distribution of t Distributions, df=120")
plot(x, dt(x, 120))
lines(x, dt(x, 120), xlab="x value",
ylab="Density", lwd=2, main="Distribution of t Distributions, df=120")
lines(x, dt(x, 120), xlab="x value",
ylab="Density", type='l', main="Distribution of t Distributions, df=120")
plot(x, dt(x, 120), xlab="x value",
ylab="Density", type='l', main="Distribution of t Distributions, df=120")
x <- seq(-10, 10, length=200)
plot(x, dt(x, 120), xlab="x value",
ylab="Density", type='l', main="Distribution of t Distributions, df=120")
abline(v=t, col='red')
text(t, 0.3, "p-value")
# 5
v = c(4.6, 4.3, 4.4, 4.7, 4.8, 6.2)
var(v)*5
var(v)
2.25/18
f = var(v)*8
f
qf(f, 5, 18)
qf(1, 5, 18)
qf(2, 5, 18)
1-pf(f, 5, 18)
qt(0.975, 18)
## (b)
u = qt(0.975, 18)
s = sqrt(2.25/18)
w = rep(c(1,1,-2)/4, 2)
w
w*w
w%*%w
sd = u*s*sqrt(w%*%w/4)
a = w%*%v
(a-sd,a+sd)
c(a-sd, a+sd)
w = c(rep(1,3), -rep(1,3))
w
w = c(rep(1,3), -rep(1,3))/3
sd = u*s*sqrt(w%*%w/4)
a = w%*%v
c(a-sd, a+sd)
w = rep(c(1,-1,0)/2, 2)
sd = u*s*sqrt(w%*%w/4)
a = w%*%v
c(a-sd, a+sd)
# 6
summary(m)
summary(TukeyHSD(m))
TukeyHSD(aov(days ~ as.factor(trt), data=d))
1:5
tr = as.factor(d$trt)
library(plyr)
mapvalues(tr, from = 1:5, to = c("None", "1 pregnant", "1 virgin", "8 pregnant", "8 virgin"))
tr = mapvalues(tr, from = 1:5, to = c("None", "1 pregnant", "1 virgin", "8 pregnant", "8 virgin"))
tr
TukeyHSD(aov(days ~ tr, data=d))
TukeyHSD(aov(days ~ tr, data=d))
View(d)
library(broom)
res = TukeyHSD(aov(days ~ tr, data=d))
tidy(res)
res = tidy(res)
View(res)
res.xtable
xtable(res)
View(res)
typeof(res)
library(xtable)
xtable(res)
res = tidy(res[, 3:7])
xtable(res)
res = TukeyHSD(aov(days ~ tr, data=d))
res = tidy(res)[, 3:7]
res
res = tidy(res)
dim(res)
xtable(res[, 2:6])
res = tidy(aov(days ~ tr, data=d))
res
xtable(res)
m = lm(days ~ tr, data=d)
coef = c(m$coefficients)
names(coef)=NULL
coef[2:5] = coef[2:5] +63.36
coef
confint(m)
mean(m$coefficients))
mean(m$coefficients)
m$coefficients
qt(0.975, 120)
?SNK.test
??snk
library(agricolae)
require(agricolae)
install.packages(agricolae)
install.packages("agricolae")
library(agricolae)
SNK.test(aov(days ~ tr, data=d))
SNK.test(aov(days ~ tr, data=d), trt = tr)
SNK.test(aov(days ~ tr, data=d), trt = "tr")
print(SNK.test(aov(days ~ tr, data=d), trt = "tr"))
print(SNK.test(aov(days ~ tr, data=d), trt = "tr"))
summary(m)
print(SNK.test(lm(days ~ tr, data=d), trt = "tr"))
data(sweetpotato)
View(sweetpotato)
model<-aov(yield~virus, data=sweetpotato)
SNK.test(model, "virus", group=FALSE,console=TRUE)
SNK.test(lm(days ~ tr, data=d), "tr", group=FALSE,console=TRUE)
SNK.test(aov(days ~ tr, data=d), "tr", group=FALSE,console=TRUE)
summary(m)
s= 219.2793
s= 219.2793 /5
plot.group()
## (b)
snk = SNK.test(aov(days ~ tr, data=d), "tr", group=FALSE,console=TRUE)
## (b)
snk = SNK.test(aov(days ~ tr, data=d), "tr", group=FALSE,console=F)
plot.group(snk)
## (b)
snk = SNK.test(aov(days ~ tr, data=d), "tr", group=T,console=F)
plot.group(snk)
qtukey(0.95, 25, 5)
0.2+s*u
s
sqrt(m$residuals/120)/5
names(,)
names(m)
sum(m$residuals^2)/120
mean(m$residuals^2)
summary(m)
s = sqrt(219.2793)/5
u=qtukey(0.95, 25, 5)
0.2+s*u
s
u
u=qtukey(0.95, 25, 120)
u
0.2+s*u
u=qtukey(0.95, nmeans=5, nranges=5)
u=qtukey(0.95, nmeans=5, nranges=5, df=120)
u
0.2+s*u
s
11.6/s
qtukey(0.95, nmeans=25, nranges=5, df=120)
qtukey(0.95, nmeans=25, nranges=5, df=5)
qtukey(0.95, nmeans=25,  df=120)
qtukey(0.95, nmeans=5,  df=120)
u = qtukey(0.95, nmeans=5,  df=120)
0.2+s*u
0.2-s*u
